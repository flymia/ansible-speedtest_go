---
# tasks file for speedtest_go

# We have to do this, because the release-download-url uses another set of CPU architecture-names (e.g. x86_64 -> amd64)
- name: Load variables for specific CPU architecture
  include_vars: "{{ ansible_architecture }}.yml"

- name: Create a group for the user
  ansible.builtin.group:
    name: "{{ spgo_group }}"
    state: present

- name: Create a user to run the program with
  user:
    name: "{{ spgo_username }}"
    group: "{{ spgo_group }}"
    system: yes
    state: present

- name: Create installation and configuration directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ spgo_username }}"
    group: "{{ spgo_group }}"
  with_items:
    - "{{ spgo_installation_directory }}"
    - "{{ spgo_configuration_directory }}"

- name: Download and extract the tar
  unarchive:
    src: "{{ spgo_download_url }}"
    dest: "{{ spgo_installation_directory }}"
    group: "{{ spgo_group }}"
    owner: "{{ spgo_username }}"
    remote_src: yes
  notify: Restart speedtest-go

- name: Create a symbolic link to the binary location of choice
  file:
    src: "{{ spgo_installation_directory }}/speedtest-backend"
    dest: "{{ spgo_binary_location }}"
    owner: "{{ spgo_username }}"
    group: "{{ spgo_group }}"
    state: link

- name: Copy the configuration file to the config directory
  template:
    src: settings.toml.j2
    dest: "{{ spgo_configuration_directory }}/settings.toml"
    group: "{{ spgo_group }}"
    owner: "{{ spgo_username }}"
  notify: Restart speedtest-go

- name: Copy the systemd-service file
  template:
    src: speedtest-go.service.j2
    dest: /etc/systemd/system/speedtest-go.service
    owner: root
    group: root
  notify: Run daemon_reload

- name: Start the service
  service:
    name: speedtest-go
    state: started

- name: Enable the service
  systemd:
    name: speedtest-go
    enabled: yes
  when: spgo_enable_service == true